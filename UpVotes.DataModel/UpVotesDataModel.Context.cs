//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UpVotes.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UpVotesEntities : DbContext
    {
        public UpVotesEntities()
            : base("name=UpVotesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompanyBranch> CompanyBranches { get; set; }
        public virtual DbSet<CompanyPortFolio> CompanyPortFolios { get; set; }
        public virtual DbSet<CompanyReview> CompanyReviews { get; set; }
        public virtual DbSet<CompanyReviewThankNote> CompanyReviewThankNotes { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<FocusArea> FocusAreas { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<UserRegistration> UserRegistrations { get; set; }
        public virtual DbSet<UserToken> UserTokens { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<CompanyVote> CompanyVotes { get; set; }
        public virtual DbSet<CategoryBasedMetaTags> CategoryBasedMetaTags { get; set; }
        public virtual DbSet<CompanySubFocus> CompanySubFocus { get; set; }
        public virtual DbSet<QuotationRateCard> QuotationRateCard { get; set; }
        public virtual DbSet<SubFocusArea> SubFocusArea { get; set; }
        public virtual DbSet<UserQuotation> UserQuotation { get; set; }
        public virtual DbSet<CompanyPendingForApproval> CompanyPendingForApproval { get; set; }
        public virtual DbSet<CompanyFocus> CompanyFocus { get; set; }
        public virtual DbSet<Email> Email { get; set; }
        public virtual DbSet<SoftwareCategory> SoftwareCategory { get; set; }
        public virtual DbSet<Company> Company { get; set; }
        public virtual DbSet<Softwares> Softwares { get; set; }
        public virtual DbSet<TeamMembers> TeamMembers { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<Sp_GetCompanyFocus_Result> Sp_GetCompanyFocus(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyFocus_Result>("Sp_GetCompanyFocus", companyIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetCompanyPortFolio_Result> Sp_GetCompanyPortFolio(Nullable<int> companyID, Nullable<int> rows)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var rowsParameter = rows.HasValue ?
                new ObjectParameter("Rows", rows) :
                new ObjectParameter("Rows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyPortFolio_Result>("Sp_GetCompanyPortFolio", companyIDParameter, rowsParameter);
        }
    
        public virtual ObjectResult<Sp_GetCompanyReviewThankNotedUsers_Result> Sp_GetCompanyReviewThankNotedUsers(Nullable<int> companyID, Nullable<int> companyReviewID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var companyReviewIDParameter = companyReviewID.HasValue ?
                new ObjectParameter("CompanyReviewID", companyReviewID) :
                new ObjectParameter("CompanyReviewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyReviewThankNotedUsers_Result>("Sp_GetCompanyReviewThankNotedUsers", companyIDParameter, companyReviewIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetFocusArea_Result> Sp_GetFocusArea()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetFocusArea_Result>("Sp_GetFocusArea");
        }
    
        public virtual ObjectResult<Sp_GetCompanyReviews_Result> Sp_GetCompanyReviews(string companyName, Nullable<int> noOfRows)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var noOfRowsParameter = noOfRows.HasValue ?
                new ObjectParameter("NoOfRows", noOfRows) :
                new ObjectParameter("NoOfRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyReviews_Result>("Sp_GetCompanyReviews", companyNameParameter, noOfRowsParameter);
        }
    
        public virtual ObjectResult<Sp_GetCompany_Result> Sp_GetCompany(string companyName, Nullable<decimal> minRate, Nullable<decimal> maxRate, Nullable<int> minEmployee, Nullable<int> maxEmployee, string sortByVotes, Nullable<int> focusAreaID, Nullable<int> userID, string location, Nullable<int> pageNo, Nullable<int> pageSize, string subFocusArea, Nullable<int> orderColumn)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var minRateParameter = minRate.HasValue ?
                new ObjectParameter("minRate", minRate) :
                new ObjectParameter("minRate", typeof(decimal));
    
            var maxRateParameter = maxRate.HasValue ?
                new ObjectParameter("maxRate", maxRate) :
                new ObjectParameter("maxRate", typeof(decimal));
    
            var minEmployeeParameter = minEmployee.HasValue ?
                new ObjectParameter("minEmployee", minEmployee) :
                new ObjectParameter("minEmployee", typeof(int));
    
            var maxEmployeeParameter = maxEmployee.HasValue ?
                new ObjectParameter("maxEmployee", maxEmployee) :
                new ObjectParameter("maxEmployee", typeof(int));
    
            var sortByVotesParameter = sortByVotes != null ?
                new ObjectParameter("sortByVotes", sortByVotes) :
                new ObjectParameter("sortByVotes", typeof(string));
    
            var focusAreaIDParameter = focusAreaID.HasValue ?
                new ObjectParameter("focusAreaID", focusAreaID) :
                new ObjectParameter("focusAreaID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var subFocusAreaParameter = subFocusArea != null ?
                new ObjectParameter("SubFocusArea", subFocusArea) :
                new ObjectParameter("SubFocusArea", typeof(string));
    
            var orderColumnParameter = orderColumn.HasValue ?
                new ObjectParameter("OrderColumn", orderColumn) :
                new ObjectParameter("OrderColumn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompany_Result>("Sp_GetCompany", companyNameParameter, minRateParameter, maxRateParameter, minEmployeeParameter, maxEmployeeParameter, sortByVotesParameter, focusAreaIDParameter, userIDParameter, locationParameter, pageNoParameter, pageSizeParameter, subFocusAreaParameter, orderColumnParameter);
        }
    
        public virtual ObjectResult<string> Sp_GetCompanyNames(Nullable<int> type, Nullable<int> focusAreaID, string companyNamelocation)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var focusAreaIDParameter = focusAreaID.HasValue ?
                new ObjectParameter("focusAreaID", focusAreaID) :
                new ObjectParameter("focusAreaID", typeof(int));
    
            var companyNamelocationParameter = companyNamelocation != null ?
                new ObjectParameter("CompanyNamelocation", companyNamelocation) :
                new ObjectParameter("CompanyNamelocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_GetCompanyNames", typeParameter, focusAreaIDParameter, companyNamelocationParameter);
        }
    
        public virtual ObjectResult<Sp_GetQuoteForMobileApp_Result> Sp_GetQuoteForMobileApp(string platformType, string themeType, string loginsecurityType, string profileType, string securityType, string reviewrateType, string serviceType, string databaseType, string featuresType)
        {
            var platformTypeParameter = platformType != null ?
                new ObjectParameter("platformType", platformType) :
                new ObjectParameter("platformType", typeof(string));
    
            var themeTypeParameter = themeType != null ?
                new ObjectParameter("themeType", themeType) :
                new ObjectParameter("themeType", typeof(string));
    
            var loginsecurityTypeParameter = loginsecurityType != null ?
                new ObjectParameter("loginsecurityType", loginsecurityType) :
                new ObjectParameter("loginsecurityType", typeof(string));
    
            var profileTypeParameter = profileType != null ?
                new ObjectParameter("profileType", profileType) :
                new ObjectParameter("profileType", typeof(string));
    
            var securityTypeParameter = securityType != null ?
                new ObjectParameter("securityType", securityType) :
                new ObjectParameter("securityType", typeof(string));
    
            var reviewrateTypeParameter = reviewrateType != null ?
                new ObjectParameter("reviewrateType", reviewrateType) :
                new ObjectParameter("reviewrateType", typeof(string));
    
            var serviceTypeParameter = serviceType != null ?
                new ObjectParameter("serviceType", serviceType) :
                new ObjectParameter("serviceType", typeof(string));
    
            var databaseTypeParameter = databaseType != null ?
                new ObjectParameter("databaseType", databaseType) :
                new ObjectParameter("databaseType", typeof(string));
    
            var featuresTypeParameter = featuresType != null ?
                new ObjectParameter("featuresType", featuresType) :
                new ObjectParameter("featuresType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetQuoteForMobileApp_Result>("Sp_GetQuoteForMobileApp", platformTypeParameter, themeTypeParameter, loginsecurityTypeParameter, profileTypeParameter, securityTypeParameter, reviewrateTypeParameter, serviceTypeParameter, databaseTypeParameter, featuresTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_InsUserQuotation(string platformType, string themeType, string loginsecurityType, string profileType, string securityType, string reviewrateType, string serviceType, string databaseType, string featuresType, string emailID, string name, string companyName)
        {
            var platformTypeParameter = platformType != null ?
                new ObjectParameter("platformType", platformType) :
                new ObjectParameter("platformType", typeof(string));
    
            var themeTypeParameter = themeType != null ?
                new ObjectParameter("themeType", themeType) :
                new ObjectParameter("themeType", typeof(string));
    
            var loginsecurityTypeParameter = loginsecurityType != null ?
                new ObjectParameter("loginsecurityType", loginsecurityType) :
                new ObjectParameter("loginsecurityType", typeof(string));
    
            var profileTypeParameter = profileType != null ?
                new ObjectParameter("profileType", profileType) :
                new ObjectParameter("profileType", typeof(string));
    
            var securityTypeParameter = securityType != null ?
                new ObjectParameter("securityType", securityType) :
                new ObjectParameter("securityType", typeof(string));
    
            var reviewrateTypeParameter = reviewrateType != null ?
                new ObjectParameter("reviewrateType", reviewrateType) :
                new ObjectParameter("reviewrateType", typeof(string));
    
            var serviceTypeParameter = serviceType != null ?
                new ObjectParameter("serviceType", serviceType) :
                new ObjectParameter("serviceType", typeof(string));
    
            var databaseTypeParameter = databaseType != null ?
                new ObjectParameter("databaseType", databaseType) :
                new ObjectParameter("databaseType", typeof(string));
    
            var featuresTypeParameter = featuresType != null ?
                new ObjectParameter("featuresType", featuresType) :
                new ObjectParameter("featuresType", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("emailID", emailID) :
                new ObjectParameter("emailID", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_InsUserQuotation", platformTypeParameter, themeTypeParameter, loginsecurityTypeParameter, profileTypeParameter, securityTypeParameter, reviewrateTypeParameter, serviceTypeParameter, databaseTypeParameter, featuresTypeParameter, emailIDParameter, nameParameter, companyNameParameter);
        }
    
        public virtual ObjectResult<Sp_GetIndustrialFocus_Result> Sp_GetIndustrialFocus(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetIndustrialFocus_Result>("Sp_GetIndustrialFocus", companyIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetClientFocus_Result> Sp_GetClientFocus(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetClientFocus_Result>("Sp_GetClientFocus", companyIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetSubFocus_Result> Sp_GetSubFocus(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSubFocus_Result>("Sp_GetSubFocus", companyIDParameter);
        }
    
        public virtual ObjectResult<string> Sp_GetDistinctSubFocusNames(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_GetDistinctSubFocusNames", companyIDParameter);
        }
    
        public virtual ObjectResult<Sp_CategoryMetaTags_Result> Sp_CategoryMetaTags(string focusAreaName, string subFocusAreaName, Nullable<bool> isService)
        {
            var focusAreaNameParameter = focusAreaName != null ?
                new ObjectParameter("FocusAreaName", focusAreaName) :
                new ObjectParameter("FocusAreaName", typeof(string));
    
            var subFocusAreaNameParameter = subFocusAreaName != null ?
                new ObjectParameter("SubFocusAreaName", subFocusAreaName) :
                new ObjectParameter("SubFocusAreaName", typeof(string));
    
            var isServiceParameter = isService.HasValue ?
                new ObjectParameter("IsService", isService) :
                new ObjectParameter("IsService", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CategoryMetaTags_Result>("Sp_CategoryMetaTags", focusAreaNameParameter, subFocusAreaNameParameter, isServiceParameter);
        }
    
        public virtual ObjectResult<Sp_GetCompanyBranches_Result> Sp_GetCompanyBranches(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyBranches_Result>("Sp_GetCompanyBranches", companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_InsertUpdateClaimListing(Nullable<int> claimListingID, Nullable<int> companyID, Nullable<int> userID, Nullable<bool> isUserApproved, string workEmail)
        {
            var claimListingIDParameter = claimListingID.HasValue ?
                new ObjectParameter("ClaimListingID", claimListingID) :
                new ObjectParameter("ClaimListingID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var isUserApprovedParameter = isUserApproved.HasValue ?
                new ObjectParameter("IsUserApproved", isUserApproved) :
                new ObjectParameter("IsUserApproved", typeof(bool));
    
            var workEmailParameter = workEmail != null ?
                new ObjectParameter("WorkEmail", workEmail) :
                new ObjectParameter("WorkEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_InsertUpdateClaimListing", claimListingIDParameter, companyIDParameter, userIDParameter, isUserApprovedParameter, workEmailParameter);
        }
    
        public virtual ObjectResult<Sp_GetClaimListingsForApproval_Result> Sp_GetClaimListingsForApproval(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetClaimListingsForApproval_Result>("Sp_GetClaimListingsForApproval", userIDParameter);
        }
    
        public virtual int Sp_AdminApproveRejectForClaiming(Nullable<int> claimListingID, Nullable<int> userID, Nullable<int> companyID, Nullable<bool> isAdminApproved, string userPassword)
        {
            var claimListingIDParameter = claimListingID.HasValue ?
                new ObjectParameter("ClaimListingID", claimListingID) :
                new ObjectParameter("ClaimListingID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var isAdminApprovedParameter = isAdminApproved.HasValue ?
                new ObjectParameter("IsAdminApproved", isAdminApproved) :
                new ObjectParameter("IsAdminApproved", typeof(bool));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("userPassword", userPassword) :
                new ObjectParameter("userPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_AdminApproveRejectForClaiming", claimListingIDParameter, userIDParameter, companyIDParameter, isAdminApprovedParameter, userPasswordParameter);
        }
    
        public virtual int Sp_DeleteCompanyHistory(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteCompanyHistory", companyIDParameter);
        }
    
        public virtual ObjectResult<Sp_CheckForCompanyAndAdminUser_Result> Sp_CheckForCompanyAndAdminUser(string companyName, Nullable<int> userID)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CheckForCompanyAndAdminUser_Result>("Sp_CheckForCompanyAndAdminUser", companyNameParameter, userIDParameter);
        }
    
        public virtual int SP_CopyCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CopyCompany", companyIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetCompanyListFocus_Result> Sp_GetCompanyListFocus(Nullable<int> companyID, Nullable<int> focusAreaID, string subFocusArea)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var focusAreaIDParameter = focusAreaID.HasValue ?
                new ObjectParameter("focusAreaID", focusAreaID) :
                new ObjectParameter("focusAreaID", typeof(int));
    
            var subFocusAreaParameter = subFocusArea != null ?
                new ObjectParameter("subFocusArea", subFocusArea) :
                new ObjectParameter("subFocusArea", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyListFocus_Result>("Sp_GetCompanyListFocus", companyIDParameter, focusAreaIDParameter, subFocusAreaParameter);
        }
    
        public virtual ObjectResult<Sp_InsertUpdateUser_Result> Sp_InsertUpdateUser(string userName, string userPassword, string firstName, string lastName, string userEmail, string userMobile, Nullable<bool> isActive, Nullable<bool> isBlocked, Nullable<System.DateTime> userActivatedDateTime, Nullable<System.DateTime> userLastLoginDateTime, string remarks, Nullable<System.DateTime> dateOfBirth, string profilePictureURL, string profileID, string profileURL, Nullable<int> userType)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var userMobileParameter = userMobile != null ?
                new ObjectParameter("UserMobile", userMobile) :
                new ObjectParameter("UserMobile", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var isBlockedParameter = isBlocked.HasValue ?
                new ObjectParameter("IsBlocked", isBlocked) :
                new ObjectParameter("IsBlocked", typeof(bool));
    
            var userActivatedDateTimeParameter = userActivatedDateTime.HasValue ?
                new ObjectParameter("UserActivatedDateTime", userActivatedDateTime) :
                new ObjectParameter("UserActivatedDateTime", typeof(System.DateTime));
    
            var userLastLoginDateTimeParameter = userLastLoginDateTime.HasValue ?
                new ObjectParameter("UserLastLoginDateTime", userLastLoginDateTime) :
                new ObjectParameter("UserLastLoginDateTime", typeof(System.DateTime));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var profilePictureURLParameter = profilePictureURL != null ?
                new ObjectParameter("ProfilePictureURL", profilePictureURL) :
                new ObjectParameter("ProfilePictureURL", typeof(string));
    
            var profileIDParameter = profileID != null ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(string));
    
            var profileURLParameter = profileURL != null ?
                new ObjectParameter("ProfileURL", profileURL) :
                new ObjectParameter("ProfileURL", typeof(string));
    
            var userTypeParameter = userType.HasValue ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_InsertUpdateUser_Result>("Sp_InsertUpdateUser", userNameParameter, userPasswordParameter, firstNameParameter, lastNameParameter, userEmailParameter, userMobileParameter, isActiveParameter, isBlockedParameter, userActivatedDateTimeParameter, userLastLoginDateTimeParameter, remarksParameter, dateOfBirthParameter, profilePictureURLParameter, profileIDParameter, profileURLParameter, userTypeParameter);
        }
    
        public virtual ObjectResult<Sp_ChangeForgetPassword_Result> Sp_ChangeForgetPassword(string userName, Nullable<int> userID, string oldPassword, string newPassword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ChangeForgetPassword_Result>("Sp_ChangeForgetPassword", userNameParameter, userIDParameter, oldPasswordParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<Sp_LoginRegisteredUser_Result> Sp_LoginRegisteredUser(string userName, string userPassword)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_LoginRegisteredUser_Result>("Sp_LoginRegisteredUser", userNameParameter, userPasswordParameter);
        }
    
        public virtual ObjectResult<Sp_GetTopVotesCompany_Result> Sp_GetTopVotesCompany()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTopVotesCompany_Result>("Sp_GetTopVotesCompany");
        }
    
        public virtual ObjectResult<Sp_GetSoftware_Result> Sp_GetSoftware(Nullable<int> servicecategoryid, string softwarename, Nullable<int> userID, Nullable<int> pageNo, Nullable<int> pageSize, string sortByVotes, Nullable<int> orderColumn)
        {
            var servicecategoryidParameter = servicecategoryid.HasValue ?
                new ObjectParameter("servicecategoryid", servicecategoryid) :
                new ObjectParameter("servicecategoryid", typeof(int));
    
            var softwarenameParameter = softwarename != null ?
                new ObjectParameter("softwarename", softwarename) :
                new ObjectParameter("softwarename", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var sortByVotesParameter = sortByVotes != null ?
                new ObjectParameter("sortByVotes", sortByVotes) :
                new ObjectParameter("sortByVotes", typeof(string));
    
            var orderColumnParameter = orderColumn.HasValue ?
                new ObjectParameter("OrderColumn", orderColumn) :
                new ObjectParameter("OrderColumn", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSoftware_Result>("Sp_GetSoftware", servicecategoryidParameter, softwarenameParameter, userIDParameter, pageNoParameter, pageSizeParameter, sortByVotesParameter, orderColumnParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_SoftwareVote(Nullable<int> userID, Nullable<int> softwareID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("SoftwareID", softwareID) :
                new ObjectParameter("SoftwareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_SoftwareVote", userIDParameter, softwareIDParameter);
        }
    
        public virtual ObjectResult<Sp_SoftwareVoteUserInformation_Result> Sp_SoftwareVoteUserInformation(Nullable<int> userID, Nullable<int> softwareID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("SoftwareID", softwareID) :
                new ObjectParameter("SoftwareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SoftwareVoteUserInformation_Result>("Sp_SoftwareVoteUserInformation", userIDParameter, softwareIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetSoftwareReviews_Result> Sp_GetSoftwareReviews(string softwareName, Nullable<int> noOfRows)
        {
            var softwareNameParameter = softwareName != null ?
                new ObjectParameter("softwareName", softwareName) :
                new ObjectParameter("softwareName", typeof(string));
    
            var noOfRowsParameter = noOfRows.HasValue ?
                new ObjectParameter("NoOfRows", noOfRows) :
                new ObjectParameter("NoOfRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSoftwareReviews_Result>("Sp_GetSoftwareReviews", softwareNameParameter, noOfRowsParameter);
        }
    
        public virtual ObjectResult<Sp_GetSoftwareReviewThankNotedUsers_Result> Sp_GetSoftwareReviewThankNotedUsers(Nullable<int> softwareID, Nullable<int> softwareReviewID)
        {
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("SoftwareID", softwareID) :
                new ObjectParameter("SoftwareID", typeof(int));
    
            var softwareReviewIDParameter = softwareReviewID.HasValue ?
                new ObjectParameter("SoftwareReviewID", softwareReviewID) :
                new ObjectParameter("SoftwareReviewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSoftwareReviewThankNotedUsers_Result>("Sp_GetSoftwareReviewThankNotedUsers", softwareIDParameter, softwareReviewIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_InsSoftwareReviewForThanksNote(Nullable<int> userID, Nullable<int> softwareReviewID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var softwareReviewIDParameter = softwareReviewID.HasValue ?
                new ObjectParameter("SoftwareReviewID", softwareReviewID) :
                new ObjectParameter("SoftwareReviewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_InsSoftwareReviewForThanksNote", userIDParameter, softwareReviewIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_InsCompanyReviewForThanksNote(Nullable<int> userID, Nullable<int> companyReviewID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var companyReviewIDParameter = companyReviewID.HasValue ?
                new ObjectParameter("CompanyReviewID", companyReviewID) :
                new ObjectParameter("CompanyReviewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_InsCompanyReviewForThanksNote", userIDParameter, companyReviewIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_CompanyVote(Nullable<int> userID, Nullable<int> companyID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_CompanyVote", userIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Sp_CompanyVoteUserInformation_Result> Sp_CompanyVoteUserInformation(Nullable<int> userID, Nullable<int> companyID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CompanyVoteUserInformation_Result>("Sp_CompanyVoteUserInformation", userIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_InsertUpdateClaimSoftwareListing(Nullable<int> claimSoftwareListingID, Nullable<int> softwareID, Nullable<int> userID, Nullable<bool> isUserApproved, string workEmail)
        {
            var claimSoftwareListingIDParameter = claimSoftwareListingID.HasValue ?
                new ObjectParameter("ClaimSoftwareListingID", claimSoftwareListingID) :
                new ObjectParameter("ClaimSoftwareListingID", typeof(int));
    
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("softwareID", softwareID) :
                new ObjectParameter("softwareID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var isUserApprovedParameter = isUserApproved.HasValue ?
                new ObjectParameter("IsUserApproved", isUserApproved) :
                new ObjectParameter("IsUserApproved", typeof(bool));
    
            var workEmailParameter = workEmail != null ?
                new ObjectParameter("WorkEmail", workEmail) :
                new ObjectParameter("WorkEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_InsertUpdateClaimSoftwareListing", claimSoftwareListingIDParameter, softwareIDParameter, userIDParameter, isUserApprovedParameter, workEmailParameter);
        }
    
        public virtual ObjectResult<Sp_GetCompanySoftwareNamesForAutoComplete_Result> Sp_GetCompanySoftwareNamesForAutoComplete(Nullable<int> type, string search)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanySoftwareNamesForAutoComplete_Result>("Sp_GetCompanySoftwareNamesForAutoComplete", typeParameter, searchParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_InsCompanyReview(Nullable<int> companyID, Nullable<int> focusAreaID, Nullable<int> userID, string reviewerCompanyName, string designation, string projectName, string feedBack, Nullable<int> rating, string email, string phone, string reviewerUserName)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var focusAreaIDParameter = focusAreaID.HasValue ?
                new ObjectParameter("FocusAreaID", focusAreaID) :
                new ObjectParameter("FocusAreaID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var reviewerCompanyNameParameter = reviewerCompanyName != null ?
                new ObjectParameter("ReviewerCompanyName", reviewerCompanyName) :
                new ObjectParameter("ReviewerCompanyName", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var feedBackParameter = feedBack != null ?
                new ObjectParameter("FeedBack", feedBack) :
                new ObjectParameter("FeedBack", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var reviewerUserNameParameter = reviewerUserName != null ?
                new ObjectParameter("ReviewerUserName", reviewerUserName) :
                new ObjectParameter("ReviewerUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_InsCompanyReview", companyIDParameter, focusAreaIDParameter, userIDParameter, reviewerCompanyNameParameter, designationParameter, projectNameParameter, feedBackParameter, ratingParameter, emailParameter, phoneParameter, reviewerUserNameParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_InsSoftwareReview(Nullable<int> softwareID, Nullable<int> serviceCategoryID, Nullable<int> userID, string reviewerSoftwareName, string designation, string feedBack, Nullable<int> rating, string email, string phone, string reviewerUserName)
        {
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("SoftwareID", softwareID) :
                new ObjectParameter("SoftwareID", typeof(int));
    
            var serviceCategoryIDParameter = serviceCategoryID.HasValue ?
                new ObjectParameter("ServiceCategoryID", serviceCategoryID) :
                new ObjectParameter("ServiceCategoryID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var reviewerSoftwareNameParameter = reviewerSoftwareName != null ?
                new ObjectParameter("ReviewerSoftwareName", reviewerSoftwareName) :
                new ObjectParameter("ReviewerSoftwareName", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var feedBackParameter = feedBack != null ?
                new ObjectParameter("FeedBack", feedBack) :
                new ObjectParameter("FeedBack", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var reviewerUserNameParameter = reviewerUserName != null ?
                new ObjectParameter("ReviewerUserName", reviewerUserName) :
                new ObjectParameter("ReviewerUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_InsSoftwareReview", softwareIDParameter, serviceCategoryIDParameter, userIDParameter, reviewerSoftwareNameParameter, designationParameter, feedBackParameter, ratingParameter, emailParameter, phoneParameter, reviewerUserNameParameter);
        }
    
        public virtual ObjectResult<Sp_GetCompanyReviewsForListingPage_Result> Sp_GetCompanyReviewsForListingPage(string companyName, Nullable<int> focusAreaId, Nullable<int> noOfReviews, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            var focusAreaIdParameter = focusAreaId.HasValue ?
                new ObjectParameter("focusAreaId", focusAreaId) :
                new ObjectParameter("focusAreaId", typeof(int));
    
            var noOfReviewsParameter = noOfReviews.HasValue ?
                new ObjectParameter("noOfReviews", noOfReviews) :
                new ObjectParameter("noOfReviews", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyReviewsForListingPage_Result>("Sp_GetCompanyReviewsForListingPage", companyNameParameter, focusAreaIdParameter, noOfReviewsParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Sp_GetSoftwareReviewsForListingPage_Result> Sp_GetSoftwareReviewsForListingPage(string softwareName, Nullable<int> serviceCategoryID, Nullable<int> noOfReviews, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var softwareNameParameter = softwareName != null ?
                new ObjectParameter("softwareName", softwareName) :
                new ObjectParameter("softwareName", typeof(string));
    
            var serviceCategoryIDParameter = serviceCategoryID.HasValue ?
                new ObjectParameter("serviceCategoryID", serviceCategoryID) :
                new ObjectParameter("serviceCategoryID", typeof(int));
    
            var noOfReviewsParameter = noOfReviews.HasValue ?
                new ObjectParameter("noOfReviews", noOfReviews) :
                new ObjectParameter("noOfReviews", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSoftwareReviewsForListingPage_Result>("Sp_GetSoftwareReviewsForListingPage", softwareNameParameter, serviceCategoryIDParameter, noOfReviewsParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Sp_GetSoftwareCompanyNews_Result> Sp_GetSoftwareCompanyNews(Nullable<int> categoryID, string subcategory, string location, Nullable<int> isCompanySoftware, string title, Nullable<int> companySoftwareID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("categoryID", categoryID) :
                new ObjectParameter("categoryID", typeof(int));
    
            var subcategoryParameter = subcategory != null ?
                new ObjectParameter("subcategory", subcategory) :
                new ObjectParameter("subcategory", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var isCompanySoftwareParameter = isCompanySoftware.HasValue ?
                new ObjectParameter("isCompanySoftware", isCompanySoftware) :
                new ObjectParameter("isCompanySoftware", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var companySoftwareIDParameter = companySoftwareID.HasValue ?
                new ObjectParameter("CompanySoftwareID", companySoftwareID) :
                new ObjectParameter("CompanySoftwareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSoftwareCompanyNews_Result>("Sp_GetSoftwareCompanyNews", categoryIDParameter, subcategoryParameter, locationParameter, isCompanySoftwareParameter, titleParameter, companySoftwareIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetSoftwareCompanyNewsByName_Result> Sp_GetSoftwareCompanyNewsByName(Nullable<int> isCompanySoftware, string companySoftwareName)
        {
            var isCompanySoftwareParameter = isCompanySoftware.HasValue ?
                new ObjectParameter("isCompanySoftware", isCompanySoftware) :
                new ObjectParameter("isCompanySoftware", typeof(int));
    
            var companySoftwareNameParameter = companySoftwareName != null ?
                new ObjectParameter("CompanySoftwareName", companySoftwareName) :
                new ObjectParameter("CompanySoftwareName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSoftwareCompanyNewsByName_Result>("Sp_GetSoftwareCompanyNewsByName", isCompanySoftwareParameter, companySoftwareNameParameter);
        }
    
        public virtual ObjectResult<Sp_GetCompanyPortFolioByName_Result> Sp_GetCompanyPortFolioByName(string companyName, Nullable<int> rows)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var rowsParameter = rows.HasValue ?
                new ObjectParameter("Rows", rows) :
                new ObjectParameter("Rows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyPortFolioByName_Result>("Sp_GetCompanyPortFolioByName", companyNameParameter, rowsParameter);
        }
    
        public virtual ObjectResult<Sp_GetCountry_Result> Sp_GetCountry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCountry_Result>("Sp_GetCountry");
        }
    
        public virtual ObjectResult<Sp_GetStateByCountryID_Result> Sp_GetStateByCountryID(Nullable<int> countryID)
        {
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetStateByCountryID_Result>("Sp_GetStateByCountryID", countryIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetSubFocusAreaByFocusID_Result> Sp_GetSubFocusAreaByFocusID(Nullable<int> focusAreaID)
        {
            var focusAreaIDParameter = focusAreaID.HasValue ?
                new ObjectParameter("FocusAreaID", focusAreaID) :
                new ObjectParameter("FocusAreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSubFocusAreaByFocusID_Result>("Sp_GetSubFocusAreaByFocusID", focusAreaIDParameter);
        }
    
        public virtual ObjectResult<Sp_IsNewsExists_Result> Sp_IsNewsExists(string title, string uRL)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_IsNewsExists_Result>("Sp_IsNewsExists", titleParameter, uRLParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_InsAdminNews(Nullable<int> isCompanySoftware, Nullable<int> categoryID, Nullable<int> subCategoryID, Nullable<int> countryID, Nullable<int> stateID, string city, Nullable<int> companyOrSoftwareID, string websiteURL, string newsTitle, string newsDescription, string imageName, string youtubeURL, Nullable<int> createdBy, string uRLNewsTitle)
        {
            var isCompanySoftwareParameter = isCompanySoftware.HasValue ?
                new ObjectParameter("IsCompanySoftware", isCompanySoftware) :
                new ObjectParameter("IsCompanySoftware", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var subCategoryIDParameter = subCategoryID.HasValue ?
                new ObjectParameter("SubCategoryID", subCategoryID) :
                new ObjectParameter("SubCategoryID", typeof(int));
    
            var countryIDParameter = countryID.HasValue ?
                new ObjectParameter("CountryID", countryID) :
                new ObjectParameter("CountryID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var companyOrSoftwareIDParameter = companyOrSoftwareID.HasValue ?
                new ObjectParameter("CompanyOrSoftwareID", companyOrSoftwareID) :
                new ObjectParameter("CompanyOrSoftwareID", typeof(int));
    
            var websiteURLParameter = websiteURL != null ?
                new ObjectParameter("WebsiteURL", websiteURL) :
                new ObjectParameter("WebsiteURL", typeof(string));
    
            var newsTitleParameter = newsTitle != null ?
                new ObjectParameter("NewsTitle", newsTitle) :
                new ObjectParameter("NewsTitle", typeof(string));
    
            var newsDescriptionParameter = newsDescription != null ?
                new ObjectParameter("NewsDescription", newsDescription) :
                new ObjectParameter("NewsDescription", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var youtubeURLParameter = youtubeURL != null ?
                new ObjectParameter("YoutubeURL", youtubeURL) :
                new ObjectParameter("YoutubeURL", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var uRLNewsTitleParameter = uRLNewsTitle != null ?
                new ObjectParameter("URLNewsTitle", uRLNewsTitle) :
                new ObjectParameter("URLNewsTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_InsAdminNews", isCompanySoftwareParameter, categoryIDParameter, subCategoryIDParameter, countryIDParameter, stateIDParameter, cityParameter, companyOrSoftwareIDParameter, websiteURLParameter, newsTitleParameter, newsDescriptionParameter, imageNameParameter, youtubeURLParameter, createdByParameter, uRLNewsTitleParameter);
        }
    
        public virtual ObjectResult<Sp_GetDashboardInfoForUser_Result> Sp_GetDashboardInfoForUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetDashboardInfoForUser_Result>("Sp_GetDashboardInfoForUser", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_InsUserNews(Nullable<int> isCompanySoftware, Nullable<int> categoryID, Nullable<int> companyOrSoftwareID, string websiteURL, string newsTitle, string newsDescription, string imageName, string youtubeURL, Nullable<int> createdBy, string uRLNewsTitle)
        {
            var isCompanySoftwareParameter = isCompanySoftware.HasValue ?
                new ObjectParameter("IsCompanySoftware", isCompanySoftware) :
                new ObjectParameter("IsCompanySoftware", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var companyOrSoftwareIDParameter = companyOrSoftwareID.HasValue ?
                new ObjectParameter("CompanyOrSoftwareID", companyOrSoftwareID) :
                new ObjectParameter("CompanyOrSoftwareID", typeof(int));
    
            var websiteURLParameter = websiteURL != null ?
                new ObjectParameter("WebsiteURL", websiteURL) :
                new ObjectParameter("WebsiteURL", typeof(string));
    
            var newsTitleParameter = newsTitle != null ?
                new ObjectParameter("NewsTitle", newsTitle) :
                new ObjectParameter("NewsTitle", typeof(string));
    
            var newsDescriptionParameter = newsDescription != null ?
                new ObjectParameter("NewsDescription", newsDescription) :
                new ObjectParameter("NewsDescription", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var youtubeURLParameter = youtubeURL != null ?
                new ObjectParameter("YoutubeURL", youtubeURL) :
                new ObjectParameter("YoutubeURL", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var uRLNewsTitleParameter = uRLNewsTitle != null ?
                new ObjectParameter("URLNewsTitle", uRLNewsTitle) :
                new ObjectParameter("URLNewsTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_InsUserNews", isCompanySoftwareParameter, categoryIDParameter, companyOrSoftwareIDParameter, websiteURLParameter, newsTitleParameter, newsDescriptionParameter, imageNameParameter, youtubeURLParameter, createdByParameter, uRLNewsTitleParameter);
        }
    
        public virtual ObjectResult<Sp_GetAllCategoriesLinks_Result> Sp_GetAllCategoriesLinks(Nullable<int> focusAreaID)
        {
            var focusAreaIDParameter = focusAreaID.HasValue ?
                new ObjectParameter("FocusAreaID", focusAreaID) :
                new ObjectParameter("FocusAreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetAllCategoriesLinks_Result>("Sp_GetAllCategoriesLinks", focusAreaIDParameter);
        }
    
        public virtual ObjectResult<Sp_CheckForSoftwareAndAdminUser_Result> Sp_CheckForSoftwareAndAdminUser(string softwareName, Nullable<int> userID)
        {
            var softwareNameParameter = softwareName != null ?
                new ObjectParameter("softwareName", softwareName) :
                new ObjectParameter("softwareName", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CheckForSoftwareAndAdminUser_Result>("Sp_CheckForSoftwareAndAdminUser", softwareNameParameter, userIDParameter);
        }
    
        public virtual int SP_CopySoftware(Nullable<int> softwareID)
        {
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("softwareID", softwareID) :
                new ObjectParameter("softwareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CopySoftware", softwareIDParameter);
        }
    
        public virtual int Sp_DeleteCompany(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteCompany", companyIDParameter);
        }
    
        public virtual int Sp_DeleteSoftwareCatagory(Nullable<int> softwareId)
        {
            var softwareIdParameter = softwareId.HasValue ?
                new ObjectParameter("softwareId", softwareId) :
                new ObjectParameter("softwareId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteSoftwareCatagory", softwareIdParameter);
        }
    
        public virtual int Sp_DeleteSoftwareHistory(Nullable<int> softwareID)
        {
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("softwareID", softwareID) :
                new ObjectParameter("softwareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteSoftwareHistory", softwareIDParameter);
        }
    
        public virtual int Sp_DeleteSoftwarePendingForApproval(Nullable<int> softwareId)
        {
            var softwareIdParameter = softwareId.HasValue ?
                new ObjectParameter("softwareId", softwareId) :
                new ObjectParameter("softwareId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_DeleteSoftwarePendingForApproval", softwareIdParameter);
        }
    
        public virtual ObjectResult<Sp_GetSoftwareDetailsByName_Result> Sp_GetSoftwareDetailsByName(string softwareName)
        {
            var softwareNameParameter = softwareName != null ?
                new ObjectParameter("softwareName", softwareName) :
                new ObjectParameter("softwareName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSoftwareDetailsByName_Result>("Sp_GetSoftwareDetailsByName", softwareNameParameter);
        }
    
        public virtual ObjectResult<Sp_GetSoftwaresByUserID_Result> Sp_GetSoftwaresByUserID(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSoftwaresByUserID_Result>("Sp_GetSoftwaresByUserID", userIdParameter);
        }
    
        public virtual int Sp_InsertSoftwarePendingForApproval(Nullable<int> softwareId)
        {
            var softwareIdParameter = softwareId.HasValue ?
                new ObjectParameter("softwareId", softwareId) :
                new ObjectParameter("softwareId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsertSoftwarePendingForApproval", softwareIdParameter);
        }
    
        public virtual ObjectResult<string> Sp_GetSoftwareCategoryIds(Nullable<int> softwareId)
        {
            var softwareIdParameter = softwareId.HasValue ?
                new ObjectParameter("softwareId", softwareId) :
                new ObjectParameter("softwareId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_GetSoftwareCategoryIds", softwareIdParameter);
        }
    
        public virtual int Sp_InsSoftwareCategory(Nullable<int> softwareId, Nullable<int> serviceCategoryId, Nullable<int> createdBy)
        {
            var softwareIdParameter = softwareId.HasValue ?
                new ObjectParameter("softwareId", softwareId) :
                new ObjectParameter("softwareId", typeof(int));
    
            var serviceCategoryIdParameter = serviceCategoryId.HasValue ?
                new ObjectParameter("serviceCategoryId", serviceCategoryId) :
                new ObjectParameter("serviceCategoryId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsSoftwareCategory", softwareIdParameter, serviceCategoryIdParameter, createdByParameter);
        }
    
        public virtual int Sp_UpdSoftwareRejectComments(Nullable<int> softwareId, string rejectedBy, string rejectedCommenst, string rejectedOn)
        {
            var softwareIdParameter = softwareId.HasValue ?
                new ObjectParameter("softwareId", softwareId) :
                new ObjectParameter("softwareId", typeof(int));
    
            var rejectedByParameter = rejectedBy != null ?
                new ObjectParameter("rejectedBy", rejectedBy) :
                new ObjectParameter("rejectedBy", typeof(string));
    
            var rejectedCommenstParameter = rejectedCommenst != null ?
                new ObjectParameter("rejectedCommenst", rejectedCommenst) :
                new ObjectParameter("rejectedCommenst", typeof(string));
    
            var rejectedOnParameter = rejectedOn != null ?
                new ObjectParameter("rejectedOn", rejectedOn) :
                new ObjectParameter("rejectedOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdSoftwareRejectComments", softwareIdParameter, rejectedByParameter, rejectedCommenstParameter, rejectedOnParameter);
        }
    
        public virtual ObjectResult<Sp_GetPortfolioInfoByID_Result> Sp_GetPortfolioInfoByID(Nullable<int> companyPortFolioID)
        {
            var companyPortFolioIDParameter = companyPortFolioID.HasValue ?
                new ObjectParameter("CompanyPortFolioID", companyPortFolioID) :
                new ObjectParameter("CompanyPortFolioID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetPortfolioInfoByID_Result>("Sp_GetPortfolioInfoByID", companyPortFolioIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_InsUpdCompanyPortFolio(Nullable<int> companyPortFolioID, Nullable<int> companyID, string title, string description, Nullable<int> createdBy, string imageURL)
        {
            var companyPortFolioIDParameter = companyPortFolioID.HasValue ?
                new ObjectParameter("CompanyPortFolioID", companyPortFolioID) :
                new ObjectParameter("CompanyPortFolioID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var imageURLParameter = imageURL != null ?
                new ObjectParameter("ImageURL", imageURL) :
                new ObjectParameter("ImageURL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_InsUpdCompanyPortFolio", companyPortFolioIDParameter, companyIDParameter, titleParameter, descriptionParameter, createdByParameter, imageURLParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_DeletePortfolio(Nullable<int> companyPortFolioID)
        {
            var companyPortFolioIDParameter = companyPortFolioID.HasValue ?
                new ObjectParameter("CompanyPortFolioID", companyPortFolioID) :
                new ObjectParameter("CompanyPortFolioID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_DeletePortfolio", companyPortFolioIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_DelTeamMember(Nullable<int> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_DelTeamMember", memberIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_InsTeamMember(Nullable<int> companyID, Nullable<int> softwareID, string memberName, string pictureName, string designation, string linkedInProfile, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("SoftwareID", softwareID) :
                new ObjectParameter("SoftwareID", typeof(int));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var pictureNameParameter = pictureName != null ?
                new ObjectParameter("PictureName", pictureName) :
                new ObjectParameter("PictureName", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var linkedInProfileParameter = linkedInProfile != null ?
                new ObjectParameter("LinkedInProfile", linkedInProfile) :
                new ObjectParameter("LinkedInProfile", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_InsTeamMember", companyIDParameter, softwareIDParameter, memberNameParameter, pictureNameParameter, designationParameter, linkedInProfileParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_UpdTeamMember(Nullable<int> memberID, string memberName, string pictureName, string designation, string linkedInProfile, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));
    
            var memberNameParameter = memberName != null ?
                new ObjectParameter("MemberName", memberName) :
                new ObjectParameter("MemberName", typeof(string));
    
            var pictureNameParameter = pictureName != null ?
                new ObjectParameter("PictureName", pictureName) :
                new ObjectParameter("PictureName", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var linkedInProfileParameter = linkedInProfile != null ?
                new ObjectParameter("LinkedInProfile", linkedInProfile) :
                new ObjectParameter("LinkedInProfile", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_UpdTeamMember", memberIDParameter, memberNameParameter, pictureNameParameter, designationParameter, linkedInProfileParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_InsContactUsInfo(string name, string email, string phone, string companyName, string contactMessage, Nullable<int> addedBy)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var contactMessageParameter = contactMessage != null ?
                new ObjectParameter("ContactMessage", contactMessage) :
                new ObjectParameter("ContactMessage", typeof(string));
    
            var addedByParameter = addedBy.HasValue ?
                new ObjectParameter("AddedBy", addedBy) :
                new ObjectParameter("AddedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_InsContactUsInfo", nameParameter, emailParameter, phoneParameter, companyNameParameter, contactMessageParameter, addedByParameter);
        }
    
        public virtual ObjectResult<Sp_GetServiceSoftwareReviewsListForApproval_Result> Sp_GetServiceSoftwareReviewsListForApproval(Nullable<int> userID, Nullable<int> companyID, Nullable<int> softwareID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("softwareID", softwareID) :
                new ObjectParameter("softwareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetServiceSoftwareReviewsListForApproval_Result>("Sp_GetServiceSoftwareReviewsListForApproval", userIDParameter, companyIDParameter, softwareIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetUserReviewByReviewID_Result> Sp_GetUserReviewByReviewID(Nullable<int> userID, Nullable<int> reviewID, Nullable<int> companyID, Nullable<int> softwareID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var reviewIDParameter = reviewID.HasValue ?
                new ObjectParameter("ReviewID", reviewID) :
                new ObjectParameter("ReviewID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("softwareID", softwareID) :
                new ObjectParameter("softwareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetUserReviewByReviewID_Result>("Sp_GetUserReviewByReviewID", userIDParameter, reviewIDParameter, companyIDParameter, softwareIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> Sp_ApproveRejectUserReview(Nullable<int> userID, Nullable<int> reviewID, Nullable<bool> isApprove, Nullable<int> companyID, Nullable<int> softwareID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var reviewIDParameter = reviewID.HasValue ?
                new ObjectParameter("ReviewID", reviewID) :
                new ObjectParameter("ReviewID", typeof(int));
    
            var isApproveParameter = isApprove.HasValue ?
                new ObjectParameter("IsApprove", isApprove) :
                new ObjectParameter("IsApprove", typeof(bool));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            var softwareIDParameter = softwareID.HasValue ?
                new ObjectParameter("softwareID", softwareID) :
                new ObjectParameter("softwareID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("Sp_ApproveRejectUserReview", userIDParameter, reviewIDParameter, isApproveParameter, companyIDParameter, softwareIDParameter);
        }
    
        public virtual ObjectResult<string> Sp_GetCompanyHeadQuartersEmail(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("companyID", companyID) :
                new ObjectParameter("companyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_GetCompanyHeadQuartersEmail", companyIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetTeamMembers_Result> Sp_GetTeamMembers(Nullable<int> memberID, string companyOrSoftwareName, Nullable<int> noOfRows)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));
    
            var companyOrSoftwareNameParameter = companyOrSoftwareName != null ?
                new ObjectParameter("CompanyOrSoftwareName", companyOrSoftwareName) :
                new ObjectParameter("CompanyOrSoftwareName", typeof(string));
    
            var noOfRowsParameter = noOfRows.HasValue ?
                new ObjectParameter("NoOfRows", noOfRows) :
                new ObjectParameter("NoOfRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetTeamMembers_Result>("Sp_GetTeamMembers", memberIDParameter, companyOrSoftwareNameParameter, noOfRowsParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Sp_InsUpdServiceSoftwareSponsorship(Nullable<int> provider, Nullable<int> companyOrSoftwareID, Nullable<int> sponsorshipCategoryID, Nullable<int> createdBy, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var providerParameter = provider.HasValue ?
                new ObjectParameter("Provider", provider) :
                new ObjectParameter("Provider", typeof(int));
    
            var companyOrSoftwareIDParameter = companyOrSoftwareID.HasValue ?
                new ObjectParameter("CompanyOrSoftwareID", companyOrSoftwareID) :
                new ObjectParameter("CompanyOrSoftwareID", typeof(int));
    
            var sponsorshipCategoryIDParameter = sponsorshipCategoryID.HasValue ?
                new ObjectParameter("SponsorshipCategoryID", sponsorshipCategoryID) :
                new ObjectParameter("SponsorshipCategoryID", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Sp_InsUpdServiceSoftwareSponsorship", providerParameter, companyOrSoftwareIDParameter, sponsorshipCategoryIDParameter, createdByParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Sp_GetExpiredServiceSoftwareSponsorshipList_Result> Sp_GetExpiredServiceSoftwareSponsorshipList(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetExpiredServiceSoftwareSponsorshipList_Result>("Sp_GetExpiredServiceSoftwareSponsorshipList", userIDParameter);
        }
    
        public virtual int Sp_SchedulerForExpiredServiceSoftwareSponsorshipList(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_SchedulerForExpiredServiceSoftwareSponsorshipList", userIDParameter);
        }
    
        public virtual int Sp_InsSponsorshipRequest(string name, string companyName, string email, string sponsorship, string userDescription, Nullable<int> addedBy)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var sponsorshipParameter = sponsorship != null ?
                new ObjectParameter("Sponsorship", sponsorship) :
                new ObjectParameter("Sponsorship", typeof(string));
    
            var userDescriptionParameter = userDescription != null ?
                new ObjectParameter("UserDescription", userDescription) :
                new ObjectParameter("UserDescription", typeof(string));
    
            var addedByParameter = addedBy.HasValue ?
                new ObjectParameter("AddedBy", addedBy) :
                new ObjectParameter("AddedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_InsSponsorshipRequest", nameParameter, companyNameParameter, emailParameter, sponsorshipParameter, userDescriptionParameter, addedByParameter);
        }
    
        public virtual ObjectResult<Sp_GetCompanyCompetitors_Result> Sp_GetCompanyCompetitors(Nullable<int> companyID)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCompanyCompetitors_Result>("Sp_GetCompanyCompetitors", companyIDParameter);
        }
    }
}
